<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Project info -->
    <groupId>dev.dong4j</groupId>
    <artifactId>arco-supreme</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- Project metadata -->
    <name>Arco Supreme</name>
    <description>Zeka.Stack 脚手架的顶层项目, 用于规范旗下的所有组件和业务服务</description>
    <url>https://github.com/zeka-stack/arco-supreme</url>
    <inceptionYear>2025</inceptionYear>

    <!-- Organization -->
    <organization>
        <name>Zeka Stack Inc.</name>
        <url>https://github.com/zeka-stack</url>
    </organization>

    <!-- License -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/license/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- Developers -->
    <developers>
        <developer>
            <id>dong4j</id>
            <name>dong4j</name>
            <email>dong4j@gmail.com</email>
            <organization>Zeka.Stack</organization>
            <organizationUrl>https://github.com/zeka-stack</organizationUrl>
            <roles>
                <role>designer</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <!-- SCM (Source Control Management) -->
    <scm>
        <url>https://github.com/zeka-stack/arco-supreme</url>
        <connection>scm:git:https://github.com/zeka-stack/arco-supreme.git</connection>
        <developerConnection>scm:git:git@github.com:zeka-stack/arco-supreme.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!-- Issue tracking -->
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/zeka-stack/arco-supreme/issues</url>
    </issueManagement>

    <!-- CI/CD system -->
    <ciManagement>
        <system>GitHub Actions</system>
        <url>https://github.com/zeka-stack/arco-supreme/actions</url>
    </ciManagement>

    <!-- Contributors (optional) -->
    <contributors>
        <contributor>
            <name>dong4j</name>
            <email>dong4j@gmail.com</email>
            <url>https://github.com/dong4j</url>
            <organization>Zeka.Stack</organization>
            <roles>
                <role>maintainer</role>
            </roles>
        </contributor>
    </contributors>

    <properties>
        <!-- 定义 zeka.stack 所有项目的版本 -->
        <global.version>2.0.0-SNAPSHOT</global.version>
        <!-- 默认固定时间戳（保证可重现构建 每次升级后记得添加一个配置, 也算是可以记录版本的发布时间 -->
        <outputTimestamp.1.0.0>2025-05-12T00:00:00Z</outputTimestamp.1.0.0>
        <outputTimestamp.2.0.0-SNAPSHOT>2025-08-30T00:00:00Z</outputTimestamp.2.0.0-SNAPSHOT>
        <!-- 默认跳过 test -->
        <maven.test.skip>true</maven.test.skip>
        <!-- 跳过 javadoc -->
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <!-- 全局设置 jdk 版本 -->
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- 关闭 API 过时警告 -->
        <maven.compile.deprecation>off</maven.compile.deprecation>
        <project.encoding>UTF-8</project.encoding>
        <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
        <!--endregion-->
        <!--region maven plugin version -->
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
        <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <!--endregion-->

        <!--region 自定义依赖 version (如果 arco-maven-plugin 和 arco-processor 共用的依赖会提取到这里来统一管理 )-->
        <annotations.version>26.0.1</annotations.version>
        <lombok.version>1.18.38</lombok.version>

        <junit.version>5.13.4</junit.version>
        <slf4j.version>2.0.17</slf4j.version>
        <log4j2.version>2.24.3</log4j2.version>
        <hutool.version>5.8.36</hutool.version>

        <spring-framework.version>6.2.9</spring-framework.version>
        <spring-boot-dependencies.version>3.5.4</spring-boot-dependencies.version>
        <mybatis-plus.version>3.5.12</mybatis-plus.version>
        <!--endregion-->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${log4j2.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- lombok 插件, 简化代码 (在 package 阶段排除) -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- idea 提供的用于编译时检查 null 的工具包 (在 package 阶段排除) -->
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${annotations.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 处理 revision 版本问题 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 全局定义 JDK 版本, 详细配置由子模块重写 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- arco-supreme 和 arco-component-parent 使用 -->
                <plugin>
                    <!-- http://maven.apache.org/plugins/maven-source-plugin/index.html -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <configuration>
                        <!-- IDEA 直接查看源码 -->
                        <attach>true</attach>
                        <!-- 包含资源文件 -->
                        <excludeResources>true</excludeResources>
                        <finalName>${project.artifactId}-${project.version}</finalName>
                        <!-- 包含 pom -->
                        <includePom>true</includePom>
                    </configuration>
                    <!-- 绑定source插件到Maven的生命周期,并在生命周期后执行绑定的source的goal -->
                    <executions>
                        <execution>
                            <!--在生命周期后执行绑定的source插件的goals -->
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <!-- 绑定source插件到Maven的生命周期 -->
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <!-- 通过配置切换部署的仓库 -->
    <profiles>
        <!-- 配置方式: https://central.sonatype.org/register/central-portal/ -->
        <profile>
            <id>central</id>
            <!--region Maven 公共仓库配置 -->
            <build>
                <plugins>
                    <!--region central-publishing-maven-plugin-->
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>0.7.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>central</publishingServerId>
                            <autoPublish>true</autoPublish>
                            <waitUntil>published</waitUntil>
                        </configuration>
                    </plugin>
                    <!--endregion-->
                    <!-- 下面 3 个插件是 maven 公共仓库必须的 -->
                    <!--region maven-gpg-plugin-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--endregion-->
                    <!--region maven-source-plugin-->
                    <!-- 打包源码插件 -->
                    <plugin>
                        <!-- http://maven.apache.org/plugins/maven-source-plugin/index.html -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <!--endregion-->
                    <!--region maven-javadoc-plugin-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <configuration>
                            <!-- 跳过 javadoc 注释检查 -->
                            <doclint>none</doclint>
                            <encoding>${project.encoding}</encoding>
                            <charset>${project.encoding}</charset>
                            <docencoding>${project.encoding}</docencoding>
                            <failOnError>false</failOnError>
                            <tags>
                                <tag>
                                    <name>email</name>
                                    <placement>t</placement>
                                    <head>开发者邮箱:</head>
                                </tag>
                                <tag>
                                    <name>date</name>
                                    <placement>t</placement>
                                    <head>创建时间:</head>
                                </tag>
                            </tags>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <!--不显示javadoc警告-->
                                    <additionalOptions>-Xdoclint:none</additionalOptions>
                                    <additionalJOption>-Xdoclint:none</additionalJOption>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--endregion-->
                </plugins>
            </build>
            <!--endregion-->
            <!-- 允许项目使用快照版本 @formatter:off-->
            <repositories>
                <repository>
                    <name>Central Portal Snapshots</name>
                    <id>central-portal-snapshots</id>
                    <url>https://central.sonatype.com/repository/maven-snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <!-- ✅ 永远不检查更新, 因为是多个独立的 maven 项目, 项目之间使用 <relativePath/> 来杜绝本地依赖查找, 导致每次使用 mvn 时都会从远端更新快照版本 所以这里设置为禁用更新  -->
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                </repository>
            </repositories>
        </profile>

        <profile>
            <id>private</id>
            <!--region 公司 maven 私服配置 -->
            <distributionManagement>
                <snapshotRepository>
                    <id>snapshots</id>
                    <!--suppress UnresolvedMavenProperty -->
                    <url>${env.MVN_PRIVATE_SNAPSHOTS_URL}</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <!-- ✅ 永远不检查更新, 因为是多个独立的 maven 项目, 项目之间使用 <relativePath/> 来杜绝本地依赖查找, 导致每次使用 mvn 时都会从远端更新快照版本 所以这里设置为禁用更新  -->
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                </snapshotRepository>
                <repository>
                    <id>releases</id>
                    <!--suppress UnresolvedMavenProperty -->
                    <url>${env.MVN_PRIVATE_RELEASE_URL}</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </repository>
            </distributionManagement>
            <!--endregion @formatter:on -->
        </profile>
    </profiles>

</project>
